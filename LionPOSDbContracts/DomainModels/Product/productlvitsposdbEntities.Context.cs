//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LionPOSDbContracts.DomainModels.Product
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class productlvitsposdbEntities : DbContext
    {
        public productlvitsposdbEntities()
            : base("name=productlvitsposdbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<combo_items> combo_items { get; set; }
        public virtual DbSet<product_price_master> product_price_master { get; set; }
        public virtual DbSet<product> products { get; set; }
        public virtual DbSet<products_merge> products_merge { get; set; }
        public virtual DbSet<supplier_product_mapping> supplier_product_mapping { get; set; }
        public virtual DbSet<unit_of_mesurement> unit_of_mesurement { get; set; }
    
        public virtual int getProductsWithDynamicClauses(string dynamicWhereClauses, string dynamicOrderByFields, Nullable<int> skip, Nullable<int> take)
        {
            var dynamicWhereClausesParameter = dynamicWhereClauses != null ?
                new ObjectParameter("dynamicWhereClauses", dynamicWhereClauses) :
                new ObjectParameter("dynamicWhereClauses", typeof(string));
    
            var dynamicOrderByFieldsParameter = dynamicOrderByFields != null ?
                new ObjectParameter("dynamicOrderByFields", dynamicOrderByFields) :
                new ObjectParameter("dynamicOrderByFields", typeof(string));
    
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var takeParameter = take.HasValue ?
                new ObjectParameter("take", take) :
                new ObjectParameter("take", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getProductsWithDynamicClauses", dynamicWhereClausesParameter, dynamicOrderByFieldsParameter, skipParameter, takeParameter);
        }
    }
}
