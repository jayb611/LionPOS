@model  LionPOS.Models.ViewModels.warehouseManagement.Warehouse.warehouseCrudOperationViewModel


<div class="card-body" id="card-body@(Model.warehouseDCM.warehousesCode)">

    <div class="row">
        <div class="col-md-12">

            @using (Ajax.BeginForm(Model.SubmitActionName, Model.controllerName, null, new AjaxOptions() { HttpMethod = "POST", OnComplete = "OnWarehouseFormAjaxComplete", OnFailure = "OnWarehouseFormAjaxFailure" }, new { @class = "form -horizontal bucket-form", id = "Warehouseform" }))
            {
                @Html.HiddenFor(model => Model.warehouseDCM.warehousesEntryBranchCode)
                @Html.HiddenFor(model => Model.warehouseDCM.warehousesEntryGroupCode)
                @Html.HiddenFor(model => Model.warehouseDCM.changeByUserName)
                @Html.HiddenFor(model => Model.warehouseDCM.entryByUserName)
                @Html.HiddenFor(model => Model.warehouseDCM.isDeleted)
                @Html.HiddenFor(model => Model.warehouseDCM.lastChangeDate)
                @Html.HiddenFor(model => Model.warehouseDCM.recordByLion)

                @Html.AntiForgeryToken()
                if (Model.crudOprationType == LionPOSServiceContractModels.ConstantDictionaryContractModel.ConstantDictionaryCM.crudOprationTypes.Insert)
                {
                    <div class="row">
                        <div class="col-sm-3"><label>Warehouse Code</label></div>
                        <div class="col-sm-6 form-group">
                            @Html.TextBoxFor(model => Model.warehouseDCM.warehousesCode, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                        </div>
                        <div class="col-sm-1"><label>IsActive</label></div>
                        <div class="onoffswitch col-sm-1">
                            <div class="switcher switcher-indigo pull-right">
                                <input id="isActive" type="checkbox" hidden="hidden" checked="checked">
                                <label for="isActive"></label>
                            </div>
                            @Html.HiddenFor(model => model.warehouseDCM.isActive, new { @id = "Acthidden" })
                        </div>
                    </div>
                }
                else
                {

                    @Html.HiddenFor(model => Model.warehouseDCM.warehousesCode)
                    <div class="row">
                        <div class="col-sm-3"><label>Warehouse Code</label></div>
                        <div class="col-sm-6 form-group">
                            <label>@Model.warehouseDCM.warehousesCode</label>
                        </div>
                        <div class="col-sm-1"><label>IsActive</label></div>
                        <div class="onoffswitch col-sm-1">
                            <div class="switcher switcher-indigo pull-right">
                                <input id="isActive" type="checkbox" hidden="hidden" @((Model.warehouseDCM.isActive == true) ? "checked='checked'" : "")>
                                <label for="isActive"></label>
                                @Html.HiddenFor(model => model.warehouseDCM.isActive, new { @id = "Acthidden" })
                            </div>
                        </div>
                    </div>


                }
                <div class="row">
                    <div class="col-sm-3"><label>Name</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.warehouseDCM.name, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Warehouse Type</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.warehouseDCM.warehouseType, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row ">
                    <div class="col-sm-3"><label>Contact #1</label></div>
                    <div class="col-sm-3 form-group">
                        @Html.TextBoxFor(model => Model.warehouseDCM.contactNo1, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip", @type = "number" })
                    </div>
                    <div class="col-sm-2"><label>Contact Type</label></div>
                    <div class="col-sm-3 form-group">
                        @Html.DropDownListFor(model => Model.warehouseDCM.contactType1, Model.ContactMobile, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Contact #2</label></div>
                    <div class="col-sm-3 form-group">
                        @Html.TextBoxFor(model => Model.warehouseDCM.contactNo2, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip", @type = "number" })
                    </div>
                    <div class="col-sm-2"><label>Contact Type</label></div>
                    <div class="col-sm-3 form-group">
                        @Html.DropDownListFor(model => Model.warehouseDCM.contactType2, Model.ContactTypes, LionPOSServiceContractModels.ConstantDictionaryContractModel.ConstantDictionaryCM.DefaultSelection_string, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Email</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.warehouseDCM.email, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip", @type = "email" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Address</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.warehouseDCM.address, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Latitude</label></div>
                    <div class="col-sm-3 form-group">
                        @Html.TextBoxFor(model => Model.warehouseDCM.latitudeLoaction, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                    <div class="col-sm-2"><label>Logitude</label></div>
                    <div class="col-sm-3 form-group">
                        @Html.TextBoxFor(model => Model.warehouseDCM.logitudeLocation, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Covering Areas</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.warehouseDCM.CoveringAreas, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Description</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.warehouseDCM.description, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Remarks</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextAreaFor(model => Model.warehouseDCM.remarks, new { @class = "form-control TinyMCE remarks", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3"></div>

                    @if (Model.crudOprationType == LionPOSServiceContractModels.ConstantDictionaryContractModel.ConstantDictionaryCM.crudOprationTypes.Insert)
                    {
                        <div class="col-sm-8">
                            <div class="col-sm-4">
                                <button type="submit" id="btnsubmit" data-loader="btnCreateLoader" class="btn btn-primary btn-ripple "><i id="ldrFormCreateAction" class="CircleLoader" style="display:none"></i>Create</button>
                            </div>

                            <div class="col-sm-4">
                                <button type="button" data-remove-element-id="@Model.warehouseDCM.warehousesCode" class="btn btn-primary btn-ripple btn-CircleLoader ">Cancel</button>
                            </div>
                        </div>
                    }
                    else
                    {



                        <div class="col-sm-8">

                            <div class="col-sm-4">
                                <button type="submit" data-loader="ldrFormUpdateAction" class="btn btn-primary btn-ripple "><i id="ldrFormUpdateAction" class="CircleLoader" style="display:none ; "></i>Update </button>
                            </div>
                            <div class="col-sm-4">
                                <button type="button" id="btndelete" data-delete-keys="@(Model.warehouseDCM.warehousesCode)" data-delete-url="@Url.Action(Model.DeleteActionName , Model.controllerName,null,Request.Url.Scheme)" data-confirm-loader="ldrFormDeleteAction" data-warehousescode="@(Model.warehouseDCM.warehousesCode)" data-bodyid="card-body@(Model.warehouseDCM.warehousesCode)" class="btn btn-red btn-flat btn-ripple" data-toggle="modal" data-target="#filterConfirmModal"><i id="ldrFormDeleteAction" class="CircleLoader" style="display:none; "></i><i class="ion-android-delete"></i>&nbsp; Delete</button>
                            </div>
                            <div class="col-sm-4">
                                <button type="button" data-remove-innerhtml-element-id="card-body@(Model.warehouseDCM.warehousesCode)" class="btn btn-primary btn-ripple btn-CircleLoader ">Cancel</button>
                            </div>

                        </div>
                    }
                </div>
            }
            <div id="idshowLoder@(Model.warehouseDCM.warehousesCode)" style="height:180px;margin:10px; display:none">
                <div id="loader"></div>
            </div>
        </div>

    </div>




</div>
