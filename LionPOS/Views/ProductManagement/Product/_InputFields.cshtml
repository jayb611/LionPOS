@model  LionPOS.Models.ViewModels.ProductManagement.Product.productCrudOperationViewModel


<div class="card-body" id="card-body@(Model.productDCM.sku)">

    <div class="row">
        <div class="col-md-12">

            @using (Ajax.BeginForm(Model.SubmitActionName, Model.controllerName, null, new AjaxOptions() { HttpMethod = "POST", OnComplete = "OnProductFormAjaxComplete", OnFailure = "OnProductFormAjaxFailure" }, new { @class = "form -horizontal bucket-form", id = "Productform" }))
            {
                @Html.HiddenFor(model => Model.productDCM.productsEntryBranchCode)
                @Html.HiddenFor(model => Model.productDCM.productsEntryGroupCode)
                @Html.HiddenFor(model => Model.productDCM.changeByUserName)
                @Html.HiddenFor(model => Model.productDCM.entryByUserName)
                @Html.HiddenFor(model => Model.productDCM.isDeleted)
                @Html.HiddenFor(model => Model.productDCM.lastChangeDate)
                @Html.HiddenFor(model => Model.productDCM.recordByLion)

                @Html.AntiForgeryToken()
                if (Model.crudOprationType == LionPOSServiceContractModels.ConstantDictionaryContractModel.ConstantDictionaryCM.crudOprationTypes.Insert)
                {
                <div class="row">
                    <div class="col-sm-3"><label>Stock Keeping Unit</label></div>
                    <div class="col-sm-6 form-group">
                        @Html.TextBoxFor(model => Model.productDCM.sku, new { @class = "form-control" , data_placement = "bottom", data_toggle = "tooltip"})
                    </div>
                    <div class="col-sm-1"><label>IsActive</label></div>
                    <div class="onoffswitch col-sm-1">
                        <div class="switcher switcher-indigo pull-right">
                            <input id="isActive" type="checkbox" hidden="hidden" checked="checked">
                            <label for="isActive"></label>
                        </div>
                        @Html.HiddenFor(model => model.productDCM.isActive, new { @id = "Acthidden" })
                    </div>
                </div>
                }
                else
                {
                @Html.HiddenFor(model => Model.productDCM.sku)
                <div class="row">
                    <div class="col-sm-3"><label>Stock Keeping Unit</label></div>
                    <div class="col-sm-6 form-group">
                        <label>@Model.productDCM.sku</label>
                    </div>
                    <div class="col-sm-1"><label>IsActive</label></div>
                    <div class="onoffswitch col-sm-1">
                        <div class="switcher switcher-indigo pull-right">
                            <input id="isActive" type="checkbox" hidden="hidden" @((Model.productDCM.isActive == true) ? "checked='checked'" : "")>
                            <label for="isActive"></label>
                            @Html.HiddenFor(model => model.productDCM.isActive, new { @id = "Acthidden" })
                        </div>
                    </div>
                </div>
                }
                <div class="row">
                    <div class="col-sm-3"><label>Title</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.productDCM.title, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Barcode Number</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.productDCM.barcodeNumber, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Product Description</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextAreaFor(model => Model.productDCM.productDescription, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Discount</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.productDCM.discount, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip", @type = "number" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Discount In Percentage</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.productDCM.discountInPercentage, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip", @type = "number" })
                    </div>
                </div>
                <div class="row ">
                    <div class="col-sm-3"><label>Is Combo</label></div>
                    <div class="col-sm-3 form-group">
                        @Html.DropDownListFor(model => Model.productDCM.isCombo, Model.IsCombo, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                    <div class="col-sm-2"><label>Can Be Sold</label></div>
                    <div class="col-sm-3 form-group">
                        @Html.DropDownListFor(model => Model.productDCM.canBeSold,Model.CanBeSold, new { @class = "form-control" , data_placement = "bottom", data_toggle = "tooltip"})
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Can Purchase</label></div>
                    <div class="col-sm-3 form-group">
                        @Html.DropDownListFor(model => Model.productDCM.canPurchase, Model.CanPurchase, LionPOSServiceContractModels.ConstantDictionaryContractModel.ConstantDictionaryCM.DefaultSelection_string, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                    <div class="col-sm-2"><label>Is Category</label></div>
                    <div class="col-sm-3 form-group">
                        @Html.DropDownListFor(model => Model.productDCM.isCategory,Model.IsCategory, LionPOSServiceContractModels.ConstantDictionaryContractModel.ConstantDictionaryCM.DefaultSelection_string, new { @class = "form-control" , data_placement = "bottom", data_toggle = "tooltip"})
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Category Of POS</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.productDCM.categoryOfPOS, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Stock Warning Qty</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.productDCM.stockWarningQty, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Unit of Mesurement Title</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.productDCM.unit_of_mesurement_title, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><label>Tax Title</label></div>
                    <div class="col-sm-8 form-group">
                        @Html.TextBoxFor(model => Model.productDCM.taxMasterTitle, new { @class = "form-control", data_placement = "bottom", data_toggle = "tooltip" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-3"></div>

                    @if (Model.crudOprationType == LionPOSServiceContractModels.ConstantDictionaryContractModel.ConstantDictionaryCM.crudOprationTypes.Insert)
                        {
                        <div class="col-sm-8">
                            <div class="col-sm-4">
                                <button type="submit" id="btnsubmit" data-loader="btnCreateLoader" class="btn btn-primary btn-ripple "><i id="ldrFormCreateAction" class="CircleLoader" style="display:none"></i>Create</button>
                            </div>

                            <div class="col-sm-4">
                                <button type="button" data-remove-element-id="@Model.productDCM.sku" class="btn btn-primary btn-ripple btn-CircleLoader ">Cancel</button>
                            </div>
                        </div>
                            }
                            else
                            {
                        <div class="col-sm-8">

                            <div class="col-sm-4">
                                <button type="submit" data-loader="ldrFormUpdateAction" class="btn btn-primary btn-ripple "><i id="ldrFormUpdateAction" class="CircleLoader" style="display:none ; "></i>Update </button>
                            </div>
                            <div class="col-sm-4">
                                <button type="button" id="btndelete" data-delete-keys="@(Model.productDCM.sku)" data-delete-url="@Url.Action(Model.DeleteActionName , Model.controllerName,null,Request.Url.Scheme)" data-confirm-loader="ldrFormDeleteAction" data-sku="@(Model.productDCM.sku)" data-bodyid="card-body@(Model.productDCM.sku)" class="btn btn-red btn-flat btn-ripple" data-toggle="modal" data-target="#filterConfirmModal"><i id="ldrFormDeleteAction" class="CircleLoader" style="display:none; "></i><i class="ion-android-delete"></i>&nbsp; Delete</button>
                            </div>
                            <div class="col-sm-4">
                                <button type="button" data-remove-innerhtml-element-id="card-body@(Model.productDCM.sku)" class="btn btn-primary btn-ripple btn-CircleLoader ">Cancel</button>
                            </div>

                        </div>
                            }
                </div>
            }
            <div id="idshowLoder@(Model.productDCM.sku)" style="height:180px;margin:10px; display:none">
                <div id="loader"></div>
            </div>
        </div>

    </div>
</div>
